#!/bin/sh
#
# Test making a patch between two different system images
#
# Copyright (C) 2012  Codethink Limited
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -eu

# Make a dummy kernel chunk.
mkdir "$DATADIR/kernel-repo"
cat <<EOF > "$DATADIR/kernel-repo/linux.morph"
{
    "name": "linux",
    "kind": "chunk",
    "install-commands": [
        "mkdir -p \"\$DESTDIR/boot\"",
        "touch \"\$DESTDIR\"/extlinux.conf",
        "touch \"\$DESTDIR\"/boot/vmlinuz",
        "touch \"\$DESTDIR\"/boot/System.map"
    ]
}
EOF
"$SRCDIR/scripts/run-git-in" "$DATADIR/kernel-repo" init --quiet
"$SRCDIR/scripts/run-git-in" "$DATADIR/kernel-repo" add .
"$SRCDIR/scripts/run-git-in" "$DATADIR/kernel-repo" commit --quiet -m foo \
    > /dev/null

# Make a stratum that include hello and kernel chunks.
cat <<EOF > "$DATADIR/morphs-repo/hello-stratum.morph"
{
    "name": "hello-stratum",
    "kind": "stratum",
    "sources": [
        {
            "name": "hello",
            "repo": "chunk-repo",
            "ref": "farrokh"
        },
        {
            "name": "linux",
            "repo": "kernel-repo",
            "ref": "master"
        }
    ]
}
EOF
"$SRCDIR/scripts/run-git-in" "$DATADIR/morphs-repo" commit --quiet -am foo \
    > /dev/null

# Build first image. Remember the stratum.
"$SRCDIR/scripts/test-morph" build morphs-repo master hello-system.morph
img1=$(find "$DATADIR/cache" -maxdepth 1 -name '*.system.*')
stratum1=$(find "$DATADIR/cache" -maxdepth 1 -name '*.stratum.*')

# Modify the chunk, in a new branch.
"$SRCDIR/scripts/run-git-in" "$DATADIR/chunk-repo" checkout --quiet farrokh
"$SRCDIR/scripts/run-git-in" "$DATADIR/chunk-repo" checkout --quiet -b alfred
sed -i s/hello/goodbye/ "$DATADIR/chunk-repo/hello.c"
"$SRCDIR/scripts/run-git-in" "$DATADIR/chunk-repo" commit -am goodbye \
    > /dev/null
    
# Modify the morphs repo to use the new chunk branch, creating a new 
# branch for the morphs repo.
"$SRCDIR/scripts/run-git-in" "$DATADIR/morphs-repo" checkout --quiet -b alfred
sed -i 's/farrokh/alfred/' "$DATADIR/morphs-repo/hello-stratum.morph"
"$SRCDIR/scripts/run-git-in" "$DATADIR/morphs-repo" commit -am goodbye \
    > /dev/null

# Build second image.
"$SRCDIR/scripts/test-morph" build morphs-repo alfred hello-system.morph
img2=$(find "$DATADIR/cache" -maxdepth 1 -name '*.system.*' \
            ! -name $(basename "$img1"))

# Make the patch.
patch="$DATADIR/patch"
"$SRCDIR/scripts/test-morph" make-patch "$patch" \
    morphs-repo master hello-system.morph \
    morphs-repo alfred hello-system.morph

# Unpack the original stratum and run the program.
mkdir "$DATADIR/unpacked"
cd "$DATADIR/unpacked"
tar -xf "$stratum1"
echo "old version:"
./bin/hello

# Apply patch, run program again. We should get updated output.
tbdiff-deploy "$patch" 2>/dev/null
echo "new version:"
./bin/hello

# Done.
echo "Done."

