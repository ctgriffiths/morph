#!/bin/sh
# Copyright (C) 2012  Codethink Limited
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Check that "morph merge" merges a system branch into master

set -eu

# Create system branch.
cd "$DATADIR/workspace"
"$SRCDIR/scripts/test-morph" init
"$SRCDIR/scripts/test-morph" branch baserock:morphs baserock/newbranch

# Make a change to a chunk.
"$SRCDIR/scripts/test-morph" edit hello-system hello-stratum hello
cd baserock/newbranch/baserock:hello
touch newfile.txt
git add newfile.txt
git commit -m foo --quiet

# Commit in morphs repo
cd ../baserock:morphs
git commit --all --quiet -m "Update morph refs for baserock/newbranch"

# Merge changes back to master
cd "$DATADIR/workspace"
"$SRCDIR/scripts/test-morph" checkout baserock:morphs master
cd master
"$SRCDIR/scripts/test-morph" merge baserock/newbranch

# Check results.
cd baserock:hello
git status --short # make sure all changes are committed
[ -e newfile.txt ] # make sure the new file is there

# Make sure all refs to the merged branch have gone.
cd ../baserock:morphs
! grep "\"ref\": \"baserock/newbranch\"" *.morph

# The only change here was the branch refs, which have now been
# changed back - so there should not be any new commits.
echo "Commit message for baserock:morphs"
git cat-file commit HEAD | tail -n 1

echo
echo "Commit message for baserock:hello"
cd ../baserock:hello
git cat-file commit HEAD | tail -n 1
